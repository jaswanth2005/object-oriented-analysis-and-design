#include "book.h"

// Constructors/Destructors
//  

book::book () {
initAttributes();
}

book::~book () { }

//  
// Methods
//  


// Accessor methods
//  


// Other methods
//  

void book::initAttributes () {
}















#ifndef BOOK_H
#define BOOK_H

#include <string>
#include vector



/**
  * class book
  * 
  */

class book
{
public:

  // Constructors/Destructors
  //  


  /**
   * Empty Constructor
   */
  book ();

  /**
   * Empty Destructor
   */
  virtual ~book ();

  // Static Public attributes
  //  

  // Public attributes
  //  


  // Public attribute accessor methods
  //  


  // Public attribute accessor methods
  //  



  /**
   */
  void add_ ()
  {
  }


  /**
   */
  void update ()
  {
  }

protected:

  // Static Protected attributes
  //  

  // Protected attributes
  //  

public:


  // Protected attribute accessor methods
  //  

protected:

public:


  // Protected attribute accessor methods
  //  

protected:


private:

  // Static Private attributes
  //  

  // Private attributes
  //  

  int id;
  string title;
  string publisher;
public:


  // Private attribute accessor methods
  //  

private:

public:


  // Private attribute accessor methods
  //  


  /**
   * Set the value of id
   * @param new_var the new value of id
   */
  void setId (int new_var)   {
      id = new_var;
  }

  /**
   * Get the value of id
   * @return the value of id
   */
  int getId ()   {
    return id;
  }

  /**
   * Set the value of title
   * @param new_var the new value of title
   */
  void setTitle (string new_var)   {
      title = new_var;
  }

  /**
   * Get the value of title
   * @return the value of title
   */
  string getTitle ()   {
    return title;
  }

  /**
   * Set the value of publisher
   * @param new_var the new value of publisher
   */
  void setPublisher (string new_var)   {
      publisher = new_var;
  }

  /**
   * Get the value of publisher
   * @return the value of publisher
   */
  string getPublisher ()   {
    return publisher;
  }
private:


  void initAttributes () ;

};

#endif // BOOK_H



















#include "librarian.h"

// Constructors/Destructors
//  

librarian::librarian () {
initAttributes();
}

librarian::~librarian () { }

//  
// Methods
//  


// Accessor methods
//  


// Other methods
//  

void librarian::initAttributes () {
}




















#ifndef LIBRARIAN_H
#define LIBRARIAN_H

#include <string>
#include vector



/**
  * class librarian
  * 
  */

class librarian
{
public:

  // Constructors/Destructors
  //  


  /**
   * Empty Constructor
   */
  librarian ();

  /**
   * Empty Destructor
   */
  virtual ~librarian ();

  // Static Public attributes
  //  

  // Public attributes
  //  


  // Public attribute accessor methods
  //  


  // Public attribute accessor methods
  //  



  /**
   */
  void manage_books ()
  {
  }


  /**
   */
  void manage_students ()
  {
  }

protected:

  // Static Protected attributes
  //  

  // Protected attributes
  //  

public:


  // Protected attribute accessor methods
  //  

protected:

public:


  // Protected attribute accessor methods
  //  

protected:


private:

  // Static Private attributes
  //  

  // Private attributes
  //  

  int id;
  string name;
  string username;
  string password_;
public:


  // Private attribute accessor methods
  //  

private:

public:


  // Private attribute accessor methods
  //  


  /**
   * Set the value of id
   * @param new_var the new value of id
   */
  void setId (int new_var)   {
      id = new_var;
  }

  /**
   * Get the value of id
   * @return the value of id
   */
  int getId ()   {
    return id;
  }

  /**
   * Set the value of name
   * @param new_var the new value of name
   */
  void setName (string new_var)   {
      name = new_var;
  }

  /**
   * Get the value of name
   * @return the value of name
   */
  string getName ()   {
    return name;
  }

  /**
   * Set the value of username
   * @param new_var the new value of username
   */
  void setUsername (string new_var)   {
      username = new_var;
  }

  /**
   * Get the value of username
   * @return the value of username
   */
  string getUsername ()   {
    return username;
  }

  /**
   * Set the value of password_
   * @param new_var the new value of password_
   */
  void setPassword_ (string new_var)   {
      password_ = new_var;
  }

  /**
   * Get the value of password_
   * @return the value of password_
   */
  string getPassword_ ()   {
    return password_;
  }
private:


  void initAttributes () ;

};

#endif // LIBRARIAN_H




















#include "student.h"

// Constructors/Destructors
//  

student::student () {
initAttributes();
}

student::~student () { }

//  
// Methods
//  


// Accessor methods
//  


// Other methods
//  

void student::initAttributes () {
}




























#ifndef STUDENT_H
#define STUDENT_H

#include <string>
#include vector



/**
  * class student
  * 
  */

class student
{
public:

  // Constructors/Destructors
  //  


  /**
   * Empty Constructor
   */
  student ();

  /**
   * Empty Destructor
   */
  virtual ~student ();

  // Static Public attributes
  //  

  // Public attributes
  //  


  // Public attribute accessor methods
  //  


  // Public attribute accessor methods
  //  


protected:

  // Static Protected attributes
  //  

  // Protected attributes
  //  

public:


  // Protected attribute accessor methods
  //  

protected:

public:


  // Protected attribute accessor methods
  //  

protected:


private:

  // Static Private attributes
  //  

  // Private attributes
  //  

  int id;
  string name;
  string username;
  string password;
public:


  // Private attribute accessor methods
  //  

private:

public:


  // Private attribute accessor methods
  //  


  /**
   * Set the value of id
   * @param new_var the new value of id
   */
  void setId (int new_var)   {
      id = new_var;
  }

  /**
   * Get the value of id
   * @return the value of id
   */
  int getId ()   {
    return id;
  }

  /**
   * Set the value of name
   * @param new_var the new value of name
   */
  void setName (string new_var)   {
      name = new_var;
  }

  /**
   * Get the value of name
   * @return the value of name
   */
  string getName ()   {
    return name;
  }

  /**
   * Set the value of username
   * @param new_var the new value of username
   */
  void setUsername (string new_var)   {
      username = new_var;
  }

  /**
   * Get the value of username
   * @return the value of username
   */
  string getUsername ()   {
    return username;
  }

  /**
   * Set the value of password
   * @param new_var the new value of password
   */
  void setPassword (string new_var)   {
      password = new_var;
  }

  /**
   * Get the value of password
   * @return the value of password
   */
  string getPassword ()   {
    return password;
  }
private:


  void initAttributes () ;

};

#endif // STUDENT_H
